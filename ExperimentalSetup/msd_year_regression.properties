! Problem

problem_type = SRFunction
problem = /media/DATA/datasets/MSD/Dylan_splits/split000/MSD-train-70pct-000.csv
external_threads = 8


! GP Operators

initialize_op = operator.TreeInitialize
selection_op = operator.CrowdedTournamentSelection
xover_op = operator.SinglePointKozaCrossover
mutate_op = operator.SubtreeMutate
! front_rank_method = euclidean
front_rank_method = first_fitness


! Fitness Functions

fitness_op = fitness.SRFitness.Java
! fitness_op = fitness.SRFitness.Java, fitness.SubtreeComplexity
! fitness_op = fitness.SRFitness.Cpp, fitness.SubtreeComplexity
! fitness_op = fitness.SRFitness.Cuda, fitness.SubtreeComplexity
! fitness_op = fitness.SRFitness.CudaDual, fitness.SubtreeComplexity
! fitness_op = fitness.SRFitness.CudaCorrelation, fitness.SubtreeComplexity
! fitness_op = fitness.SRFitness.CudaCorrelationDual, fitness.SubtreeComplexity
! fitness_op = fitness.SRFitness.CudaDual, fitness.SRFitness.CudaCorrelationDual, fitness.SubtreeComplexity


! GP parameters

pop_size = 100
num_gens = 5

function_set = + - * mydivide exp mylog sqrt square cube quart sin cos
unary_function_set = exp mylog sqrt square cube quart sin cos
terminal_set = X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11 X12 X13 X14 X15 X16 X17 X18 X19 X20 X21 X22 X23 X24 X25 X26 X27 X28 X29 X30 X31 X32 X33 X34 X35 X36 X37 X38 X39 X40 X41 X42 X43 X44 X45 X46 X47 X48 X49 X50 X51 X52 X53 X54 X55 X56 X57 X58 X59 X60 X61 X62 X63 X64 X65 X66 X67 X68 X69 X70 X71 X72 X73 X74 X75 X76 X77 X78 X79 X80 X81 X82 X83 X84 X85 X86 X87 X88 X89 X90

bin_width = 5
tree_initial_max_depth = 15
tourney_size = 10
xover_rate = 0.6
tree_xover_tries = 10
tree_xover_max_depth = 15
mutation_rate = 0.1
tree_mutate_max_depth = 15
! fitness pnorm
fitness_mean_pow = 2
! necessary if the output variable is discrete.
integer_fitness = true



