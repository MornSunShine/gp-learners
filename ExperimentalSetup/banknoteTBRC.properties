! Problem

problem_type = SRFunction
problem = /media/DATA/datasets/banknoteAuthentication/data_banknote_authentication.csv
cross_validation_set = /media/DATA/datasets/banknoteAuthentication/data_banknote_authentication.csv
external_threads = 8


! GP Operators

initialize_op = operator.TreeInitialize
selection_op = operator.CrowdedTournamentSelection
xover_op = operator.SinglePointKozaCrossover
mutate_op = operator.SubtreeMutate
! front_rank_method = euclidean
front_rank_method = first_fitness


! Fitness Functions

! fitness_op = fitness.TBRCFitness.Java
fitness_op = fitness.TBRCFitness.Java, fitness.SubtreeComplexity

false_positive_weight = 0.1
false_negative_weight = 0.9

! GP parameters

pop_size = 1000
num_gens = 100

function_set = and or not
unary_function_set = not
terminal_set = X1 X2 X3 X4

bin_width = 5
tree_initial_max_depth = 10
tourney_size = 10
xover_rate = 0.6
tree_xover_tries = 10
tree_xover_max_depth = 15
mutation_rate = 0.1
tree_mutate_max_depth = 15
