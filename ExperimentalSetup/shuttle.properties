!!! Skin data
!!! Uncomment for Dynamic Equalization
!fitness_op = fitness.SRFitness.ArrayData

!!! Uncomment for Multi-Objective Optimization
! fitness_op = fitness.SRFitness.ExternalROC, fitness.SubtreeComplexity
fitness_op = fitness.SRFitness.ExternalCUDAROC, fitness.SubtreeComplexity

selection_op = operator.CrowdedTournamentSelection
! selection_op = operator.TournamentSelection

!!! several important problem-dependant parameters
pop_size = 1000
num_gens = 100
! front_rank_method = euclidean
front_rank_method = first_fitness
problem = test/shuttleTrain.data
problem_type = SRFunction

function_set = + - * mydivide exp mylog sqrt square cube quart sin cos
unary_function_set = exp mylog sqrt square cube quart sin cos
terminal_set = X1 X2 X3

!!! which norm should be used in the fitness calculation
fitness_mean_pow = 2

!!! should the model predictions be rounded before fitness calculation? useful if the output variable is discrete.
!!! note: this will produce subtle fitness rounding errors if left on mistakenly
! integer_fitness = true

!!! more GP parameters
tourney_size = 10
mutate_op = operator.SubtreeMutate
tree_mutate_max_depth = 10
mutation_rate = 0.5
initialize_op = operator.TreeInitialize
tree_initial_max_depth = 5
xover_op = operator.SinglePointKozaCrossover
tree_xover_max_depth = 10
tree_xover_tries = 10
xover_rate = 0.5

!!! For debugging only
!enable_pop_log = true
!enable_fiteval_log = true
!pop_log_path_prefix = popLog
!!! if true, print detailed information including timing
verbose = true
!!! if true, save detailed info per generation as JSON
save_json = true
rng_seed = 1
