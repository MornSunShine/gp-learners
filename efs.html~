<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="chrome=1">
    <title>EFS</title>
    <link rel="stylesheet" href="stylesheets/styles.css">
    <link rel="stylesheet" href="stylesheets/pygment_trac.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
    <script src="javascripts/main.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">

  </head>
  <body>

      <header>
        <h1><a href="index.html">FlexGP Project</a></h1>
        <p>Evolutionary Feature Search</p>
      </header>

    <div class="wrapper">
      <nav>
        <ul></ul>
      </nav>
      <section>




<h1><a name="efs" class="anchor" href="#efs"><span class="octicon octicon-link"></span></a>Evolutionary Feature Search</h1>




<p>Evolutionary Feature Search is a fast and flexible regression tool that obtains models for nonlinear data. EFS generates basis expansion models in the form 
<img src="http://latex.codecogs.com/svg.latex?$f(X) = \sum_{m=1}^{M}\beta_m h_m(X)$" border="0"/>
where 
<img src="http://latex.codecogs.com/svg.latex?$h_m(X) : R^p \rightarrow R$" border="0"/>
is the <em>mth</em> transformation of
<img src="http://latex.codecogs.com/svg.latex?$X$, $\ m=1 , \ldots, M$" border="0"/>.</p>

<p>Our method relies on the assumption that the <em>feature space</em>, that is, the space of functions
<img src="http://latex.codecogs.com/svg.latex?$h_m(X)$" border="0"/>,
is searchable via evolutionary computation. EFS evolves a population of complex features and exploits
a state-of-the-art implementation of Lasso to obtain a linear combination of the evolved features.</p>
<!-- <p><center><img src="images/efs-figure.png" height=220px align="middle" alt="efs-overview"></center></p> -->

<p>We now show a model generated with EFS for the <a href="https://archive.ics.uci.edu/ml/datasets/Energy+efficiency" target="_blank">Energy efficiency Data Set</a> (cooling load):</p>
<pre>-667.22087254556
 + 0.0031958872102735 	* X2
 + 0.0236575048235607 	* X3
 + 1.7625341834310182 	* X5
 + 3.5838689408067 	* X7
 - 0.0844347441030852 	* X8
 + 1.8674306078410352 	* (* X5 X7)
 - 4.3074019337628355 	* (cos X3)
 + 1.3036977873428939 	* (+ (* X1 X2) X5)
 + 2.0387267660894E-5 	* (cube (* X6 X5))
 + 0.1576183107619040 	* (mydivide X5 (cos (cos X3)))
 - 0.0097850273465413 	* (cube (mydivide X5 (exp X8)))
 + 0.0028476621894107	* (* X5 X3)
 + 4.09626049049873 	* (sin (* X5 X3))
</pre>





<h3><a name="lasso-implementation" class="anchor" href="#lasso-implementation"><span class="octicon 
octicon-link"></span></a>Pathwise LASSO regression</h3>
 
<p>We resort to <a href="https://code.google.com/p/lasso4j/"> LASSO4j</a>, an efficient implementation of LASSO by Y. Ganjisaffar. This implementation is based on the pathwise coordinate descent method introduced in <a href="http://www.jstatsoft.org/v33/i01/paper"> this paper</a>:</p>
<p><em>J. H. Friedman, T. Hastie, and R. Tibshirani. Regularization paths for generalized linear models via
coordinate descent. Journal of Statistical Software, 33(1):1â€“22, 2 2010.</em></p>





<h3><a name="publications" class="anchor" href="#publications"><span class="octicon 
octicon-link"></span></a>Publications</h3>
<p>To be announced.</p> 





<h1><a name="tutorial" class="anchor" href="#tutorial"><span class="octicon octicon-link"></span></a>Tutorial</h1>

<p>Current release provides functionality both to perform symbolic regression on numerical datasets and 
to test the retrieved models. In this page we provide a quick tutorial on how to get started with EFS.</p>
<p>Note: this release is only supported for Linux Debian platforms.</p>


<h2><a name="step-2-data-format" class="anchor" href="#step-2-data-format"><span class="octicon 
octicon-link"></span></a>Step 1: Data format</h2>

<p>Data must be provided in csv format where each line corresponds to an exemplar and the target values are placed 
in the last column. Note that any additional line or column containing labels or nominal values needs to be removed.</p>


<h2><a name="step-1-download-the-flexgpjar-file-from-here" class="anchor" 
href="#step-1-download-the-flexgpjar-file-from-here"><span class="octicon 
octicon-link"></span></a>Step 2: Download the efs.jar file from <a href="" target="_blank">here</a></a>
</h2>


<h2><a name="step-3-running-flexgp" class="anchor" href="#step-3-running-flexgp"><span class="octicon 
octicon-link"></span></a>Step 3: model the data</h2>

<h4><a name="test-the-models" class="anchor" href="#test-the-models"><span class="octicon octicon-link"></span></a>Model the data</h4>
<p>From your terminal:</p>

<pre><code>$ java -jar efs.jar -train path_to_train_data -minutes 1
</code></pre>

<p>The model will be stored in the file <strong>model.txt</strong>. Additionally, the list of features will be stored in <strong>features.txt</strong>.

<h4><a name="test-the-models" class="anchor" href="#test-the-models"><span class="octicon octicon-link"></span></a>Test 
the model</h4>

<p>EFS provides functionality to obtain the MSE and MAE of the retrieved model once the training is finished. 
From the terminal:</p>

<pre><code>$ cd run_folder
$ java -jar efs.jar -test path_to_test_data
</code></pre>





<h1><a name="examples" class="anchor" href="#examples"><span class="octicon octicon-link"></span></a>Examples</h1>

<p>To check reports visit our blog:
<a href="blog.html">FlexGP Blog</a></p>






<h1><a name="authors-and-contributors" class="anchor" href="#authors-and-contributors"><span class="octicon octicon-link"></span></a>Authors and Contributors</h1>

<p>This project is developed by Ignacio Arnaldo (<a href="https://github.com/ignacioarnaldo" class="user-mention">@ignacioarnaldo</a>), member of the <a href="http://groups.csail.mit.edu/EVO-DesignOpt/groupWebSite/">Any-Scale Learning For All (ALFA)</a> group at MIT.</p>
<img src="images/ALFA-logo-lousy.png" alt="ALFA">
      </section>
      <footer>
        <p><small>Hosted on <a href="http://pages.github.com">GitHub Pages</a> using the Dinky theme</small></p>
      </footer>
    </div>	

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-57388957-8', 'auto');
  ga('send', 'pageview');

</script>

  </body>
</html>
